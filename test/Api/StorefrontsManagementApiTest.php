<?php
/**
 * StorefrontsManagementApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Aurigma\BackOffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BackOffice API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: backoffice-v1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\BackOffice\Test\Api;

use \Aurigma\BackOffice\Configuration;
use \Aurigma\BackOffice\ApiException;
use \Aurigma\BackOffice\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * StorefrontsManagementApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\BackOffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class StorefrontsManagementApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for storefrontsManagementCreateBigCommerceStorefront
     *
     * Creates new BigCommerce storefront..
     *
     */
    public function testStorefrontsManagementCreateBigCommerceStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementCreateCustomStorefront
     *
     * Creates new custom storefront..
     *
     */
    public function testStorefrontsManagementCreateCustomStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementCreateMagentoStorefront
     *
     * Creates new Magento storefront..
     *
     */
    public function testStorefrontsManagementCreateMagentoStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementCreateNopCommerceStorefront
     *
     * Creates new NopCommerce storefront..
     *
     */
    public function testStorefrontsManagementCreateNopCommerceStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementCreateWooCommerceStorefront
     *
     * Creates new WooCommerce storefront..
     *
     */
    public function testStorefrontsManagementCreateWooCommerceStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementDelete
     *
     * Deletes an existing storefront by its identifier..
     *
     */
    public function testStorefrontsManagementDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGet
     *
     * Returns a storefront by identifier..
     *
     */
    public function testStorefrontsManagementGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGetAll
     *
     * Returns all storefronts, relevant to the specified query parameters..
     *
     */
    public function testStorefrontsManagementGetAll()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGetBigCommerceStorefront
     *
     * Returns extended information about BigCommerce storefront..
     *
     */
    public function testStorefrontsManagementGetBigCommerceStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGetCustomStorefront
     *
     * Returns extended information about custom storefront..
     *
     */
    public function testStorefrontsManagementGetCustomStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGetMagentoStorefront
     *
     * Returns extended information about Magento storefront..
     *
     */
    public function testStorefrontsManagementGetMagentoStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGetNopCommerceStorefront
     *
     * Returns extended information about NopCommerce storefront..
     *
     */
    public function testStorefrontsManagementGetNopCommerceStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for storefrontsManagementGetWooCommerceStorefront
     *
     * Returns extended information about WooCommerce storefront..
     *
     */
    public function testStorefrontsManagementGetWooCommerceStorefront()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
