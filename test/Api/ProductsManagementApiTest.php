<?php
/**
 * ProductsManagementApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  Aurigma\BackOffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * BackOffice API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: backoffice-v1
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace Aurigma\BackOffice\Test\Api;

use \Aurigma\BackOffice\Configuration;
use \Aurigma\BackOffice\ApiException;
use \Aurigma\BackOffice\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * ProductsManagementApiTest Class Doc Comment
 *
 * @category Class
 * @package  Aurigma\BackOffice
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ProductsManagementApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for productsManagementCreateDesignsConnections
     *
     * Creates new designs connections for a specified product..
     *
     */
    public function testProductsManagementCreateDesignsConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementCreateDocumentsConnections
     *
     * Creates new documents connections for a specified product..
     *
     */
    public function testProductsManagementCreateDocumentsConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementCreateMockupsConnections
     *
     * Creates new mockups connections for a specified product..
     *
     */
    public function testProductsManagementCreateMockupsConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementCreateProduct
     *
     * Creates a new product and returns its description..
     *
     */
    public function testProductsManagementCreateProduct()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementDeleteProduct
     *
     * Deletes a product by its identifier..
     *
     */
    public function testProductsManagementDeleteProduct()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetAllProducts
     *
     * Returns all products, relevant to the specified query parameters..
     *
     */
    public function testProductsManagementGetAllProducts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetAvailablePersonalizationWorkflows
     *
     * Returns all available product personalization workflows..
     *
     */
    public function testProductsManagementGetAvailablePersonalizationWorkflows()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetAvailableProcessingPipelines
     *
     * Returns all available product processing pipelines..
     *
     */
    public function testProductsManagementGetAvailableProcessingPipelines()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProduct
     *
     * Returns a product by its identifier..
     *
     */
    public function testProductsManagementGetProduct()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProductOptions
     *
     * Returns a list of product options..
     *
     */
    public function testProductsManagementGetProductOptions()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProductVariant
     *
     * Returns a product variant..
     *
     */
    public function testProductsManagementGetProductVariant()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProductVariantDesigns
     *
     * Returns a list of product variant designs..
     *
     */
    public function testProductsManagementGetProductVariantDesigns()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProductVariantDocuments
     *
     * Returns a list of product variant documents..
     *
     */
    public function testProductsManagementGetProductVariantDocuments()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProductVariantMockups
     *
     * Returns a list of product variant mockups..
     *
     */
    public function testProductsManagementGetProductVariantMockups()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementGetProductVariants
     *
     * Returns a list of product variants..
     *
     */
    public function testProductsManagementGetProductVariants()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementImportProducts
     *
     * Imports products from a specific CSV file and returns a list of imported products descriptions..
     *
     */
    public function testProductsManagementImportProducts()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementRemoveDesignsConnections
     *
     * Removes designs connections for a specified product..
     *
     */
    public function testProductsManagementRemoveDesignsConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementRemoveDocumentsConnections
     *
     * Removes documents connections for a specified product..
     *
     */
    public function testProductsManagementRemoveDocumentsConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementRemoveMockupsConnections
     *
     * Removes mockups connections for a specified product..
     *
     */
    public function testProductsManagementRemoveMockupsConnections()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementSetProductVariantAvailability
     *
     * Set product variants availability. Variants identifiers will be changed..
     *
     */
    public function testProductsManagementSetProductVariantAvailability()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementSetProductVariantPrice
     *
     * Set product variants price. Variants identifiers will be changed..
     *
     */
    public function testProductsManagementSetProductVariantPrice()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for productsManagementSetProductVariantSku
     *
     * Set product variants SKU. Variants identifiers will be changed..
     *
     */
    public function testProductsManagementSetProductVariantSku()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
